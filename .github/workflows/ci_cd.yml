# .github/workflows/ci_cd.yml
name: CI-CD
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.9" }

      # 디버그: 현재 워크스페이스 구조 확인
      - name: Debug tree
        run: |
          echo "workspace: $GITHUB_WORKSPACE"
          pwd; ls -la
          echo "---- depth 1 ----"
          for d in *; do [ -d "$d" ] && echo "[$d]"; ls -la "$d" || true; done

      # requirements.txt 위치 자동 탐지
      - name: Locate requirements.txt
        id: req
        run: |
          set -euo pipefail
          # 후보 경로들을 순서대로 검사 (필요하면 추가)
          for cand in \
            "requirements.txt" \
            "PRIVATE-BACK/requirements.txt" \
            "Backend/requirements.txt" \
            "PRIVATE-BACK/Backend/requirements.txt"
          do
            if [ -f "$cand" ]; then
              echo "Found: $cand"
              echo "path=$cand" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          done
          echo "❌ requirements.txt not found in expected paths." >&2
          echo "path=" >> "$GITHUB_OUTPUT"
          exit 1

      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install -r "${{ steps.req.outputs.path }}"
          # pytest가 요구사항에 없을 수도 있으니 보강 설치
          python -m pip show pytest >/dev/null 2>&1 || python -m pip install pytest

      # 테스트 위치도 자동 감지 (Backend 우선)
      - name: Run tests (tolerate no tests)
        run: |
          set +e
          TEST_DIR="."
          [ -d "PRIVATE-BACK/Backend" ] && TEST_DIR="PRIVATE-BACK/Backend"
          [ -d "Backend" ] && TEST_DIR="Backend"
          echo "pytest target: $TEST_DIR"
          python -m pytest -q "$TEST_DIR"
          code=$?
          if [ "$code" -eq 5 ]; then
            echo "No tests collected; treating as success."
            exit 0
          fi
          exit $code



  deploy:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  
      - name: Copy PRIVATE-BACK to server root
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}   # root
          key: ${{ secrets.SSH_KEY }}
          source: "PRIVATE-BACK/**"
          target: "/root/"
  
      - name: Install deps & restart service (server)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            cd /root/PRIVATE-BACK
            /usr/bin/python3.9 -m pip install -U pip
            /usr/bin/python3.9 -m pip install -r requirements.txt
            systemctl restart myapp.service
            systemctl is-active myapp.service
  
      
    